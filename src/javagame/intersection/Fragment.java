/*We want to extract the words from a text. We define a word as a string of letter or digit characters.  The characters can be in any language. Thus, the delimiters are any string that consists of one or more characters that are not letters or digits (e.g., whitespace, punctuation symbols, and parentheses). The regular expression "[^\\P{L}\\P{N}]+" represents a string consisting of one or more characters that are not letters or digits. The statement
String[] words = line.split("[^\\p{L}\\p{N}]+");
will split the string line consisting of letters, digits, special characters, and punctuation symbols into an array of words. The meaning of \\p{L} and \\p{N} is discussed next.
Unicode Character Class Support.  The groups shown in Table A.9 apply only to the first 128 Unicode characters, which is adequate for processing English text. However, Java uses the Unicode characters that can be used to represent languages other than English. In these other languages, a–z do not represent all of the letters or may not be letters at all. For example, French includes the letters à, á, and â, which are distinct from a. Greek uses characters such as α, β, and γ. Selected character groups based on the Unicode character category are shown in Table A.10.
The StringBuilder and StringBuffer Classes.  Java provides a class called StringBuilder that, like String, also stores character sequences.  However, unlike a String object, the contents of a StringBuilder object can be changed. Use a StringBuilder object to store a string that you plan to change; otherwise, use a String object to store that string. Table  A.11 describes the methods of class StringBuilder. In Table A.11, “this StringBuilder” means the StringBuilder object to which the method is applied through the dot notation. Methods append, delete, insert, and replace modify this StringBuilder object.  The StringBuilder class was introduced in Java 5.0 as a replacement for the StringBuffer.  The StringBuffer has the same methods as the StringBuilder, but is designed for programs that have multiple threads of execution. All programs presented in this text are single‐thread.*/
